package com.aistudio.advertisementyandexdemoapp.navigationimport androidx.compose.foundation.borderimport androidx.compose.foundation.layout.heightimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.shape.RoundedCornerShapeimport androidx.compose.material.BottomNavigationimport androidx.compose.material.BottomNavigationItemimport androidx.compose.material.Textimport androidx.compose.runtime.Composableimport androidx.compose.runtime.getValueimport androidx.compose.ui.Modifierimport androidx.compose.ui.draw.shadowimport androidx.compose.ui.graphics.Color.Companion.Blackimport androidx.compose.ui.graphics.Color.Companion.Yellowimport androidx.compose.ui.text.font.FontWeightimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.spimport androidx.navigation.NavControllerimport androidx.navigation.compose.currentBackStackEntryAsState@Composablefun BottomNavigationBar(navController: NavController, modifier: Modifier) {    val items = listOf(        BottomNavigationItems.Banners,        BottomNavigationItems.FullScreen,        BottomNavigationItems.Native,        BottomNavigationItems.Video,    )    BottomNavigation(        backgroundColor = Yellow,        contentColor = Black,        modifier = modifier            .padding(bottom = 45.dp)            .height(65.dp)            .border(width = 0.5.dp,                color = Black,                shape = RoundedCornerShape(topEnd = 20.dp, topStart = 20.dp))    ) {        val navBackStackEntry by navController.currentBackStackEntryAsState()        val currentRoute = navBackStackEntry?.destination?.route        items.forEach { item ->            BottomNavigationItem(                icon = { },                label = {                    Text(                        text = item.title,                        fontSize = 10.sp,                        fontWeight = FontWeight(weight = 700),                        modifier = modifier                    )                },                selectedContentColor = Black,                unselectedContentColor = Black.copy(0.4f),                alwaysShowLabel = true,                selected = currentRoute == item.route,                onClick = {                    navController.navigate(item.route) {                        navController.graph.startDestinationRoute?.let { route ->                            popUpTo(route) { saveState = true }                        }                        launchSingleTop = true                        restoreState = true                    }                },                modifier = modifier.padding(bottom = 22.dp)            )        }    }}